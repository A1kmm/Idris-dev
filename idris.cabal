Name:           idris
Version:        0.9
License:        BSD3
License-file:   LICENSE
Author:         Edwin Brady
Maintainer:     Edwin Brady <eb@cs.st-andrews.ac.uk>
Homepage:       http://www.idris-lang.org/

Stability:      Alpha
Category:       Compilers/Interpreters, Dependent Types
Synopsis:       Dependently Typed Functional Programming Language
Description:    Idris is a general purpose language with full dependent types.
                Dependent types allow types to be predicated on values,
                meaning that some aspects of a program's behaviour can be
                specified precisely in the type. The language is closely 
		related to Epigram and Agda. There is a tutorial at <http://www.idris-lang.org/documentation>.

Cabal-Version:  >= 1.6
Build-type:     Custom

Extra-source-files:    lib/Makefile  lib/*.idr lib/prelude/*.idr lib/network/*.idr
                       tutorial/examples/*.idr

Executable     idris
               Main-is: Main.hs
               hs-source-dirs: src
               Other-modules: Core.TT, Core.Evaluate, Core.Typecheck, 
                              Core.ProofShell, Core.ProofState, Core.CoreParser, 
                              Core.ShellParser, Core.Unify, Core.Elaborate,
                              Core.CaseTree, Core.Constraints,

                              Idris.AbsSyntax, Idris.Parser, Idris.REPL,
                              Idris.REPLParser, Idris.ElabDecls, Idris.Error,
                              Idris.Delaborate, Idris.Primitives, Idris.Imports,
                              Idris.Compiler, Idris.Prover, Idris.ElabTerm,
                              Idris.Coverage, Idris.IBC, Idris.Unlit,

                              Paths_idris

               Build-depends:   base>=4 && <5, parsec, mtl, Cabal, readline,
                                containers, process, transformers, filepath, directory,
                                binary, bytestring, unix, epic>=0.9.2
                                
               Extensions:      MultiParamTypeClasses, FunctionalDependencies,
                                FlexibleInstances, TemplateHaskell
               ghc-prof-options: -auto-all
               ghc-options: -rtsopts
